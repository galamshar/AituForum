{"version":3,"sources":["Services/AuthHeader.js","Services/AuthService.js","App/Components/Header.jsx","App/Components/Breadcrumbs.jsx","App/Components/Forums/ForumsCategory.jsx","App/Components/Forums/ForumsHeader.jsx","Services/TopicService.js","App/Components/Forums/ForumsContent.jsx","App/Components/Forums/Forums.jsx","App/Components/Login/LoginPage.jsx","App/Components/Forums/ThreadsHeader.jsx","App/Components/Forums/ThreadsContent.jsx","App/Components/Forums/SubForums.jsx","Services/UserService.js","App/Components/Thread/PostContent.jsx","Services/PostService.js","App/Components/Thread/PostingField.jsx","App/Components/Thread/ThreadPostHeader.jsx","App/Components/Thread/Thread.jsx","App/Components/Account/AccountPosts.jsx","App/Components/Account/AccountTopics.jsx","App/Components/Account/AccountTab.jsx","App/Components/Account/Account.jsx","App/Components/Thread/CreateThread.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","API_URL","AuthService","username","password","bodyFormData","FormData","append","axios","post","headers","then","response","data","myDate","Date","setHours","getHours","setItem","stringify","get","clear","window","location","href","this","getCurrentUser","setInterval","removeItem","Header","props","state","currentUser","id","className","large","src","alt","width","height","alignment","Alignments","RIGHT","to","userId","login","onClick","logout","React","Component","Breadcrumb","icon","faHome","ForumsCategory","$","unbind","click","i","find","hasClass","removeClass","addClass","parent","toggleClass","next","slideToggle","small","rtopic","data-connect","onClickToggle","ForumsHeader","pageNumber","pageSize","params","parentTopicId","topicId","name","description","ForumsContent","countOfSubtopics","countOfPosts","subtopics","map","subtopic","TopicService","getSubTopics","res","setState","prevState","Object","assign","items","length","getCountOfPosts","content","push","faNewspaper","parseInt","Forums","isLoadedRoot","error","rtopics","isLoadedSubtopics","fetch","json","resultR","urls","promises","url","Promise","all","responses","resultS","result","item","message","forums","roottopic","forumsContent","required","value","role","LoginPage","handleLogin","bind","onChangeUsername","onChangePassword","rightActive","rightInActive","onClickLoginBtn","onClickRegBtn","loading","isRightActive","action","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","checkBtn2","history","reload","resMessage","toString","register","method","onSubmit","ref","c","faFacebookF","faGooglePlusG","faLinkedinIn","type","placeholder","min","max","onChange","validations","disabled","style","display","SubForums","threads","isLoaded","prevProps","match","subTopicId","subtopicsWithoutPost","subtopicsWithPost","topic","rules","canOwnPosts","accountId","PostContent","isLogged","tmpposts","posts","index","UserService","getProfile","authorId","tmpcontent","topicCount","postCount","score","writtenDate","split","pathname","text","sort","a","b","key","postId","PostingField","onChangeText","postHandler","textarea","focus","autosize","PostService","ThreadHeader","faUser","faCalendarAlt","getPostById","threadInfo","topicInfo","AccountPosts","datetime","substring","getDate","getMonth","getFullYear","getMinutes","getSeconds","AccountTopics","topics","updatedDate","creatorId","AccountTab","activeIndex","isLoadedPosts","isLoadedTopics","getProfilePosts","getProfileTopics","rel","isActive","Account","accInfo","createDate","createOn","lastActivity","lastTime","roles","CreateThread","onChangeName","onChangeDescription","createHandler","input","createSubtopic","App","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.707422c6.chunk.js","sourcesContent":["export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n  \n    if (user && user.token) {\n      return { Authorization: 'Bearer ' + user.token };\n    } else {\n      return {};\n    }\n  }","import axios from 'axios';\nimport authHeader from './AuthHeader';\nconst API_URL = \"http://localhost:8080/api/\";\nclass AuthService {\n    login(username, password) {\n        var bodyFormData = new FormData();\n        bodyFormData.append('login', username)\n        bodyFormData.append('password', password)\n        return axios.\n            post(API_URL + \"auth/sign-in\", bodyFormData, {\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                }\n            })\n            .then(response => {\n                if (response.data.token) {\n                    var myDate = new Date();\n                    myDate.setHours(myDate.getHours() + 1); //one hour from now\n                    localStorage.setItem('expiration', JSON.stringify(myDate));\n                    localStorage.setItem(\"user\", JSON.stringify(response.data))\n                }\n\n                return response.data;\n            })\n    }\n\n\n    register(username, password) {\n        var bodyFormData = new FormData();\n        bodyFormData.append('login', username)\n        bodyFormData.append('password', password)\n        return axios.post(API_URL + \"auth/register\", bodyFormData, {\n            headers: {\n                'Accept': '*/*',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        })\n            .then(response => {\n                if (response.data.token) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data))\n                }\n\n                return response.data;\n            });\n    }\n\n    logout() {\n        return axios.get(API_URL + \"auth/logout\", {\n            headers: {\n                'Authorization': authHeader().Authorization\n            }\n        })\n            .then(() => {\n                localStorage.clear()\n                window.location.href = '/login'\n            })\n    }\n\n    changePassword(password) {\n        return axios.post(API_URL + \"auth/change-password\", {\n            password\n        })\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    isLoggedIn() {\n        var user = this.getCurrentUser();\n        if (user != null) { return true } else {\n            return false;\n        }\n    }\n}\n\nfunction checkExpiration() {\n    //check if past expiration date\n    var values = JSON.parse(localStorage.getItem('expiration'));\n    //check \"my hour\" index here\n    if (values < new Date()) {\n        localStorage.removeItem(\"user\")\n        localStorage.removeItem(\"expiration\")\n    }\n}\n\nfunction myFunction() {\n    var myinterval = 15 * 60 * 1000; // 15 min interval\n    setInterval(function () { checkExpiration(); }, myinterval);\n}\n\nmyFunction();\n\nexport default new AuthService();","import \"../assets/css/style.css\";\nimport React from \"react\";\nimport { Grid, Cell, Alignments } from \"react-foundation\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n    };\n  }\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <header id=\"#top\">\n        <Grid className=\"row\">\n          <Cell large={4} className=\"column lpad\">\n            <Cell className=\"logo\">\n              <a href=\"/\">\n                <img\n                  src=\"https://astanait.edu.kz/wp-content/uploads/2020/05/aitu-logo-white-2-300x154.png\"\n                  alt=\"aitu\"\n                  width=\"100px\"\n                  height=\"\"\n                />\n              </a>\n            </Cell>\n          </Cell>\n          <Cell\n            alignment={Alignments.RIGHT}\n            large={8}\n            className=\"column ar lpad\"\n          >\n            <nav className=\"menu\">\n              <Link to=\"#\">Members</Link>\n              <Link to=\"#\">Forum Actions</Link>\n              <Link to=\"#\">FAQ</Link>\n              <Link to=\"#\">Contact</Link>\n              {currentUser != null ? <Link to={'/profile/' + currentUser.userId}>{currentUser.login}</Link> : <a href='/login'>Login</a>}\n              <Link to=\"#\" onClick={AuthService.logout}>Logout</Link>\n            </nav>\n          </Cell>\n        </Grid>\n      </header>\n    );\n  }\n}\n","import \"../assets/css/style.css\";\nimport React from \"react\";\nimport { Grid, BreadcrumbItem, Breadcrumbs } from \"react-foundation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Breadcrumb extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Grid className=\"row\">\n        <Breadcrumbs large={12} className=\"column lpad top-msg\">\n          <BreadcrumbItem>\n            <a href=\"/\">\n              <FontAwesomeIcon icon={faHome} />\n            </a>\n          </BreadcrumbItem>\n        </Breadcrumbs>\n      </Grid>\n    );\n  }\n}\n","import '../../assets/css/style.css'\nimport React from 'react';\nimport { Grid, Cell } from 'react-foundation';\nimport $ from 'jquery'\nexport default class ForumsCategory extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    onClickToggle() {\n        $('a[data-connect]').unbind().click( function() {\n            var i = $(this).find('i');\n            i.hasClass('fas fa-arrow-circle-up') ? i.removeClass('fas fa-arrow-circle-up').addClass('fas fa-arrow-circle-down') : i.removeClass('fas fa-arrow-circle-down').addClass('fas fa-arrow-circle-up');\n            $(this).parent().parent().toggleClass('all').next().slideToggle();\n          });\n      };\n\n    render(){\n        return(\n            <Grid large={12} className=\"forum-category rounded top\">\n                <Cell large={8} small={10} className=\"column lpad\">\n           {this.props.rtopic}\n        </Cell>\n                <Cell large={4} small={2} className=\"column lpad ar\">\n                    <a data-connect className = \"toggler\" onClick={() => this.onClickToggle()}>\n                        <i className=\"fas fa-arrow-circle-up\"></i>\n                    </a>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import '../../assets/css/style.css'\nimport React from 'react';\nimport { Grid, Cell } from 'react-foundation';\nexport default class ForumsHeader extends React.Component{\n    render(){\n      return(\n              <Grid className=\"forum-head row\" large={12}>\n              <Cell large = {8} small = {8} className=\"column lpad\">\n                Forums\n              </Cell>\n              <Cell large = {1} className=\"column lpad\">\n                Threads\n              </Cell>\n              <Cell large = {1} className=\"column lpad\">\n                Post\n              </Cell>\n              <Cell large = {2} small = {4} className=\"column lpad\">\n                Freshness\n              </Cell>\n            </Grid>\n      )\n    }\n}","import axios from 'axios';\nimport authHeader from './AuthHeader';\n\nconst API_URL = \"http://localhost:8080/api/\";\n\nclass TopicService {\n    getRootTopics(pageNumber, pageSize) {\n        return axios.get(API_URL + \"topics/root-topics\", {\n            params: {\n                pageNumber: pageNumber,\n                pageSize: pageSize\n            }\n        })\n            .then(response => {\n                return response.data\n            })\n    }\n\n    getSubTopics(parentTopicId, pageNumber, pageSize) {\n        return axios.get(API_URL + \"topics/sub-topics\", {\n            params: {\n                topicId: parentTopicId,\n                pageNumber: pageNumber,\n                pageSize: pageSize\n            }\n        })\n            .then(response => {\n                return response.data\n            })\n    }\n\n    getCountOfPosts(topicId) {\n        return axios.get(API_URL + \"topics/posts-count/\" + topicId)\n            .then(response => {\n                return response.data\n            }\n            )\n    }\n\n    createSubtopic(parentTopicId, name, description) {\n        var bodyFormData = new FormData();\n        bodyFormData.append('parentTopicId', parentTopicId);\n        bodyFormData.append('name', name);\n        bodyFormData.append('description', description);\n        bodyFormData.append('canOwnPosts', true);\n        bodyFormData.append('rolesAllowedToRead', \"Student\");\n        bodyFormData.append('rolesAllowedToWrite', \"Student\");\n        return axios.post(API_URL + \"topics/create-subtopic\", bodyFormData, {\n            headers: {\n                'Authorization': authHeader().Authorization\n            }\n        })\n    }\n}\n\nexport default new TopicService();","import \"../../assets/css/style.css\";\n\nimport React from \"react\";\nimport { Grid, Cell } from \"react-foundation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faNewspaper } from \"@fortawesome/free-regular-svg-icons\";\nimport TopicService from \"../../../Services/TopicService\";\nimport { Link } from \"react-router-dom\";\nexport default class ForumsContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countOfSubtopics: {},\n      countOfPosts: {},\n    };\n  }\n  componentDidMount() {\n    this.props.subtopics.map((subtopic) => {\n      TopicService.getSubTopics(subtopic.id, 1, 100)\n        .then((res) => {\n          this.setState((prevState) => {\n            let countOfSubtopics = Object.assign(\n              {},\n              prevState.countOfSubtopics\n            );\n            countOfSubtopics[subtopic.id] = res.items.length;\n            return { countOfSubtopics };\n          });\n        })\n        .then(() => {\n          TopicService.getCountOfPosts(subtopic.id).then((res) => {\n            this.setState((prevState) => {\n              let countOfPosts = Object.assign(\n                {},\n                prevState.countOfPosts\n              );\n              countOfPosts[subtopic.id] = res;\n              return { countOfPosts };\n            });\n          });\n        });\n    });\n  }\n  render() {\n    var content = [];\n    this.props.subtopics.map((subtopic) => {\n      content.push(\n        <Grid large={12} className=\"forum-topic\" key={parseInt(`${subtopic.parentTopicId}${subtopic.id}`)}>\n          <Cell large={1} className=\"column lpad\">\n            <FontAwesomeIcon icon={faNewspaper} />\n          </Cell>\n          <Cell large={7} small={8} className=\"column lpad\">\n            <span className=\"overflow-control\">\n              <Link to={`/forum/${subtopic.id}`}>{subtopic.name}</Link>\n            </span>\n            <span className=\"overflow-control\">\n              {subtopic.description}\n            </span>\n          </Cell>\n          <Cell large={1} className=\"column lpad\">\n            <span className=\"center\">\n              {this.state.countOfSubtopics[subtopic.id]}\n            </span>\n          </Cell>\n          <Cell large={1} className=\"column lpad\">\n            <span className=\"center\">\n            {this.state.countOfPosts[subtopic.id]}\n            </span>\n          </Cell>\n          <Cell large={2} small={4} className=\"column pad\">\n            <span>\n              <a href=\"#\">Some sub-topic</a>\n            </span>\n            <span>08-29-2013 7:29PM</span>\n            <span>\n              by <a to=\"#\">Some user</a>\n            </span>\n          </Cell>\n        </Grid>\n      );\n    });\n    return content;\n  }\n}\n","import React from 'react';\nimport ForumsCategory from './ForumsCategory.jsx'\nimport ForumsHeader from './ForumsHeader.jsx';\nimport ForumsContent from './ForumsContent.jsx';\nimport { Row } from 'react-foundation';\n\nexport default class Forums extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoadedRoot : false,\n            error : null,\n            rtopics : [],\n            isLoadedSubtopics : false,\n            subtopics : []\n        };\n    }\n\n    \n\n    componentDidMount(){\n        fetch('http://localhost:8080/api/topics/root-topics/?pageNumber=1&pageSize=10')\n        .then(res => res.json())\n        .then(\n            (resultR) => {\n            this.setState({\n                isLoadedRoot : true,\n                rtopics : resultR.items\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoadedRoot : true,\n                    error\n                })\n            }\n        )\n        .then(resultR => {\n        var urls = []\n        this.state.rtopics.map(rtopic => urls.push('http://localhost:8080/api/topics/sub-topics/?topicId='+rtopic.id+'&pageNumber=1&pageSize=10'))\n        var promises = urls.map(url => fetch(url))\n        Promise.all(promises)\n        .then(responses => Promise.all(responses.map(res => res.json())))\n        .then(resultS => {\n            var items = [];\n            resultS.map(result => result.items.map(item => items.push(item)))\n            this.setState({\n            isLoadedSubtopics : true,\n            subtopics : items\n        })})})\n    }\n\n    render(){\n        const { error, isLoadedRoot, rtopics, isLoadedSubtopics,subtopics } = this.state;\n        if (error) {\n            return <div>Ошибка: {error.message}</div>;\n          } else if (!isLoadedRoot || !isLoadedSubtopics) {\n            return <div>Загрузка...</div>;\n          } else {\n            var forums = [];\n            rtopics.map(roottopic => {\n                var forumsContent = [];\n                subtopics.map(subtopic => {\n                    if (subtopic.parentTopicId == roottopic.id) {\n                        forumsContent.push(subtopic)\n                    };\n                });\n                forums.push(\n                    <div className = \"row mb\" key={roottopic.id}>\n                        <ForumsCategory rtopic = {roottopic.name}/>\n                        <Row className=\"toggleview\">\n                            <ForumsHeader />\n                            <ForumsContent subtopics = {forumsContent}/>\n                        </Row>\n                    </div> \n                     )\n            })\n            return forums;\n        }\n    }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebookF,\n  faGooglePlusG,\n  faLinkedinIn,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport \"../../assets/css/login/login.css\";\nimport AuthService from \"../../../Services/AuthService\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        <span>This field is required!</span>\n      </div>\n    );\n  }\n};\n\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.rightActive = this.rightActive.bind(this);\n    this.rightInActive = this.rightInActive.bind(this);\n    this.onClickLoginBtn = this.onClickLoginBtn.bind(this);\n    this.onClickRegBtn = this.onClickRegBtn.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\",\n      isRightActive: false,\n      action: null,\n    };\n  }\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onClickLoginBtn(e) {\n    this.setState({\n      action: \"login\",\n    });\n  }\n\n  onClickRegBtn(e) {\n    this.setState({\n      action: \"register\",\n    });\n  }\n\n  rightActive(e) {\n    this.setState(state => ({\n      isRightActive: true,\n      username : \"\",\n      password : \"\",\n      message: \"\",\n      action: \"register\"\n    }))\n  }\n\n  rightInActive(e) {\n    this.setState({\n      isRightActive: false,\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      action: \"login\"\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0 || this.checkBtn2.context._errors.length === 0) {\n      if (this.state.action == \"login\") {\n        AuthService.login(this.state.username, this.state.password).then(\n          (res) => {\n            if (res) {\n              this.props.history.push(\"/\");\n              window.location.reload();\n            } else {\n              this.setState({\n                loading: false,\n                message: \"Incorrect login or password!\",\n                action: null,\n              });\n            }\n          },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            this.setState({\n              loading: false,\n              message: resMessage,\n              action: null,\n            });\n          }\n        );\n      } else {\n        AuthService.register(this.state.username, this.state.password).then(\n          (res) => {\n            if (res) {\n              this.props.history.push(\"/\");\n              window.location.reload();\n            } else {\n              this.setState({\n                loading: false,\n                message: \"This account already exist!\",\n                action: null,\n              });\n            }\n          },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            this.setState({\n              loading: false,\n              action: null,\n              message: resMessage,\n            });\n          }\n        );\n      }\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <a href=\"/\">\n          <h2>AITU FORUM</h2>\n        </a>\n        <div\n          className={`container ${\n            this.state.isRightActive ? \"right-panel-active\" : \"\"\n          }`}\n          id=\"container\"\n        >\n          <div className=\"form-container sign-up-container\">\n            <Form\n              method=\"post\"\n              id=\"registerform\"\n              onSubmit={this.handleLogin}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <h1>Create Account</h1>\n              <div className=\"social-container\">\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faFacebookF} />\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faGooglePlusG} />\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faLinkedinIn} />\n                </a>\n              </div>\n              <span>or use your email for registration</span>\n              <Input\n                type=\"text\"\n                placeholder=\"Username\"\n                id=\"username\"\n                name=\"username\"\n                min=\"3\"\n                max=\"16\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                id=\"password\"\n                name=\"password\"\n                min=\"3\"\n                max=\"16\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n              <button\n                id=\"signup\"\n                type=\"submit\"\n                name=\"signup\"\n                disabled={this.state.loading}\n                onClick={this.onClickRegBtn}\n              >\n                Sign Up\n              </button>\n              <br />\n              <span id=\"register-errormsg\"></span>\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn2 = c;\n                }}\n              />\n            </Form>\n          </div>\n          <div className=\"form-container sign-in-container\">\n            <Form\n              id=\"login-form\"\n              onSubmit={this.handleLogin}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <h1>Sign in</h1>\n              <div className=\"social-container\">\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faFacebookF} />\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faGooglePlusG} />\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <FontAwesomeIcon icon={faLinkedinIn} />\n                </a>\n              </div>\n              <span>or use your account</span>\n              <Input\n                type=\"text\"\n                placeholder=\"Username\"\n                id=\"login\"\n                name=\"login\"\n                min=\"3\"\n                max=\"32\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                id=\"password\"\n                name=\"password\"\n                min=\"3\"\n                max=\"16\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n              <a href=\"#\">Forgot your password?</a>\n              <button\n                id=\"signin\"\n                type=\"submit\"\n                name=\"signin\"\n                disabled={this.state.loading}\n                onClick={this.onClickLoginBtn}\n              >\n                Sign In\n              </button>\n              <br />\n              {this.state.message && (\n                <span id=\"login-errormsg\">{this.state.message}</span>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>Welcome Back!</h1>\n                <p>\n                  To keep connected with us please login with your personal info\n                </p>\n                <button\n                  className=\"ghost\"\n                  id=\"signIn\"\n                  onClick={this.rightInActive}\n                >\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Hello, Friend!</h1>\n                <p>Enter your personal details and start journey with us</p>\n                <button\n                  className=\"ghost\"\n                  id=\"signUp\"\n                  onClick={this.rightActive}\n                >\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <footer>\n          <p>© Copyrights 2020, AITU FORUM. All rights reserved.</p>\n        </footer>\n      </div>\n    );\n  }\n}\n","import '../../assets/css/style.css'\nimport React from 'react';\nimport { Grid, Cell } from 'react-foundation';\nexport default class ForumsHeader extends React.Component{\n    render(){\n      return(\n              <Grid className=\"forum-head row\" large={12}>\n              <Cell large = {8} small = {8} className=\"column lpad\">\n                Threads\n              </Cell>\n              <Cell large = {2} className=\"column lpad\">\n                Post\n              </Cell>\n              <Cell large = {2} small = {4} className=\"column lpad\">\n                Freshness\n              </Cell>\n            </Grid>\n      )\n    }\n}","import \"../../assets/css/style.css\";\n\nimport React from \"react\";\nimport { Grid, Cell } from \"react-foundation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faNewspaper } from \"@fortawesome/free-regular-svg-icons\";\nimport TopicService from \"../../../Services/TopicService\";\nimport { Link } from \"react-router-dom\";\nexport default class ForumsContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countOfPosts: {},\n    };\n  }\n  componentDidMount() {\n    this.props.subtopics.map((subtopic) => {\n        TopicService.getCountOfPosts(subtopic.id).then((res) => {\n            this.setState((prevState) => {\n              let countOfPosts = Object.assign(\n                {},\n                prevState.countOfPosts\n              );\n              countOfPosts[subtopic.id] = res;\n              return { countOfPosts };\n            });\n          })\n    });\n  }\n  render() {\n    var content = [];\n    this.props.subtopics.map((subtopic) => {\n      content.push(\n        <Grid large={12} className=\"forum-topic\" key={parseInt(`${subtopic.parentTopicId}${subtopic.id}`)}>\n          <Cell large={1} className=\"column lpad\">\n            <FontAwesomeIcon icon={faNewspaper} />\n          </Cell>\n          <Cell large={7} small={8} className=\"column lpad\">\n            <span className=\"overflow-control\">\n              <Link to={`/thread/${subtopic.id}`}>{subtopic.name}</Link>\n            </span>\n            <span className=\"overflow-control\">\n              {subtopic.description}\n            </span>\n          </Cell>\n          <Cell large={2} className=\"column lpad\">\n            <span className=\"center\">\n            {this.state.countOfPosts[subtopic.id]}\n            </span>\n          </Cell>\n          <Cell large={2} small={4} className=\"column pad\">\n            <span>\n              <a href=\"#\">Some sub-topic</a>\n            </span>\n            <span>08-29-2013 7:29PM</span>\n            <span>\n              by <a to=\"#\">Some user</a>\n            </span>\n          </Cell>\n        </Grid>\n      );\n    });\n    return content;\n  }\n}\n","import React from \"react\";\nimport ForumsHeader from \"./ForumsHeader.jsx\";\nimport ForumsContent from \"./ForumsContent.jsx\";\nimport ThreadsHeader from \"./ThreadsHeader.jsx\";\nimport ThreadsContent from \"./ThreadsContent.jsx\"\nimport { Row } from \"react-foundation\";\nimport TopicService from \"../../../Services/TopicService\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SubForums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtopics: [],\n      threads : [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevProps.location != this.props.location){\n      window.location.reload()\n    }\n}\n\n  componentDidMount(){\n    TopicService.getSubTopics(this.props.match.params.subTopicId, 1, 10).then(\n      (res) => {\n        var subtopicsWithoutPost = [];\n        var subtopicsWithPost = [];\n        this.setState({\n          isLoaded: true,\n        });\n        res.items.map((topic) => {\n          if (topic.rules.canOwnPosts) {\n            subtopicsWithPost.push(topic);\n          } else {\n              subtopicsWithoutPost.push(topic)\n          }\n        });\n        this.setState({\n            subtopics : subtopicsWithoutPost,\n            threads : subtopicsWithPost\n        })\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }\n    );\n  }\n\n\n  render() {\n    const { subtopics, isLoaded, error,threads } = this.state;\n    if (error) {\n      return <div>Ошибка: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Загрузка...</div>;\n    } else {\n      var content = [];\n      content.push(<div className=\"row mb forum\"><Link to={\"/forum/create/\" + this.props.match.params.subTopicId}><button>Create Thread</button></Link></div>)\n      if (subtopics.length > 0) {\n        content.push(<div className=\"row mb forum\" key={this.props.match.params.subTopicId}>\n        <Row className=\"toggleview\">\n          <ForumsHeader />\n          <ForumsContent subtopics={subtopics} />\n        </Row>\n      </div>)\n      }\n      if(threads.length > 0){\n          content.push(<div className=\"row mb\" key={this.props.match.params.subTopicId}>\n          <Row className=\"toggleview\">\n            <ThreadsHeader />\n            <ThreadsContent subtopics={threads} />\n          </Row>\n        </div>)\n      }\n      if(content.length > 0){\n          return content\n      }\n      \n      return(\n        <div className=\"row mb forum\">\n        <Link to={\"/forum/create/\" + this.props.match.params.subTopicId}><button>Create Thread</button></Link>\n        <Row className=\"toggleview\">\n          <span>Error, the topic is empty</span>\n        </Row>\n      </div>\n      )\n    }\n  }\n}\n","import axios from 'axios';\nimport authHeader from './AuthHeader';\n\nconst API_URL = \"http://localhost:8080/api/\";\n\nclass UserService {\n    getProfile(userId) {\n        return axios.get(API_URL + \"accounts/profile\", {\n            params: {\n                accountId: userId\n            }\n        }, {\n            headers: {\n                'Authorization': authHeader().Authorization\n            }\n        }).then(response => { return response.data })\n    }\n    getProfilePosts(userId){\n        return axios.get(API_URL + \"accounts/posts\", {params:{\n            accountId: userId,\n            pageNumber: 1,\n            pageSize: 10\n        }}).then(response => {return response.data})\n    }\n\n    getProfileTopics(userId){\n        return axios.get(API_URL + \"accounts/topics\", {params:{\n            accountId: userId,\n            pageNumber: 1,\n            pageSize: 10\n        }}).then(response => {return response.data})\n    }\n}\n\nexport default new UserService();","import \"../../assets/css/style.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Cell } from \"react-foundation\";\nimport UserService from \"../../../Services/UserService\"\nexport default class PostContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: true,\n      content: []\n    };\n  }\n\ncomponentDidMount() {\n      var tmpposts = []\n      this.props.posts.map((post,index) => {\n      UserService.getProfile(post.authorId).then(user => {\n        let tmpcontent = <Cell large={12} className=\"row panel grid-x\" key={post.id}>\n        <Cell large={2} className=\"column profile-left\">\n          <Cell large={10} className=\"column prof-element\">\n            <img\n              src=\"https://avatarfiles.alphacoders.com/495/49573.jpg\"\n              alt=\"avatar\"\n            />\n            <Link to={`/profile/${post.authorId}`}>{user.login}</Link>\n          </Cell>\n          <Cell large={12} className=\"column prof-element extra-info\">\n            <dl className=\"pairs pairs-justified\">\n              <dt>Threads</dt>\n              <dd>{user.topicCount}</dd>\n            </dl>\n            <dl className=\"pairs pairs-justified\">\n              <dt>Posts</dt>\n              <dd>{user.postCount}</dd>\n            </dl>\n            <dl className=\"pairs pairs-justified\">\n              <dt>Score</dt>\n              <dd>{user.score}</dd>\n            </dl>\n          </Cell>\n        </Cell>\n        <Cell large={10} className=\"column profile-right\">\n          <Cell large={12} className=\"column prof-element\">\n            <Cell large={12} className=\"row content-element\">\n              <span>{post.writtenDate.split(\"T\")[0]}</span>\n              <Link to={window.location.pathname + '#' + index} id={index} className=\"floatr\">\n                {`#${index}`}\n              </Link>\n            </Cell>\n            <Cell large={12} className=\"row content-element\">\n              <span>\n                {post.text}\n              </span>\n            </Cell>\n            <Cell\n              large={12}\n              className=\"row content-element content-element-foot\"\n            >\n              {/* <FontAwesomeIcon icon={faHeart} />\n              <span>Like</span> */}\n            </Cell>\n          </Cell>\n        </Cell>\n      </Cell>\n        tmpposts.push(tmpcontent)\n      })\n      .then(()=>{\n        this.setState({\n          content : tmpposts.sort((a, b) => (a.key > b.key) ? 1 : -1)\n        })\n      })\n    });\n    \n  }\n\n  render(){\n    return (\n      this.state.content\n    )\n  }\n  }\n\n","import axios from 'axios';\nimport authHeader from './AuthHeader';\n\nconst API_URL = \"http://localhost:8080/api/\";\n\nclass PostService{\n    getPostById(postId){\n        return axios.get(API_URL +\"posts/by-topic/\"+postId+\"?pageNumber=1&pageSize=100\",{\n            headers : {\n                'Authorization': authHeader().Authorization\n            }\n        })\n        .then(response => {\n            return response.data;\n        })\n    }\n\n    getPostByTopicId(topicId,pageNumber,pageSize){\n        return axios.get(API_URL + \"by-topic/\" + topicId, {params : {\n            pageNumber : pageNumber,\n            pageSize : pageSize\n        }})\n    }\n\n    post(topicId,text){\n        var bodyFormData = new FormData();\n        bodyFormData.append('topicId', topicId);\n        bodyFormData.append('text', text)\n        return axios.post(API_URL + \"posts/\" + topicId + \"/post\", bodyFormData, {\n            headers : {\n                'Authorization': authHeader().Authorization\n            }\n        })\n    }\n}\n\nexport default new PostService();","import React from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport PostService from \"../../../Services/PostService\"\r\nimport autosize from 'autosize'\r\n\r\nexport default class PostingField extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onChangeText = this.onChangeText.bind(this);\r\n      this.postHandler = this.postHandler.bind(this);\r\n      this.state = {\r\n          text : \"\",\r\n          loading : false\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textarea.focus();\r\n        autosize(this.textarea)\r\n    }\r\n\r\n    onChangeText(e) {\r\n        this.setState({\r\n          text: e.target.value,\r\n        });\r\n      }\r\n\r\n    postHandler(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading : true\r\n        })\r\n        \r\n        PostService.post(this.props.topicId, this.state.text).then((res) => {\r\n            window.location.reload();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container postform-container\">\r\n                <Form\r\n              method=\"post\"\r\n              id=\"postForm\"\r\n              className=\"post-form\"\r\n              onSubmit={this.postHandler}\r\n              ref={(c) => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n                <textarea\r\n                type=\"text\"\r\n                placeholder=\"Your text here\"\r\n                id=\"postcontent\"\r\n                name=\"postcontent\"\r\n                min=\"3\"\r\n                max=\"256\"\r\n                value={this.state.text}\r\n                onChange={this.onChangeText}\r\n                ref={c=>this.textarea=c}\r\n              />\r\n              <button\r\n                id=\"doPost\"\r\n                type=\"submit\"\r\n                name=\"doPost\"\r\n                disabled={this.state.loading}\r\n              >\r\n                Post\r\n              </button>\r\n            </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"../../assets/css/style.css\";\nimport React from \"react\";\nimport { Cell } from \"react-foundation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nexport default class ThreadHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div large={12} className=\"thread-content\">\n        <Cell>\n        <Cell large={12} className=\"forum-category rounded top\">\n          <Cell large={12} small={12} className=\"lpad\">\n            WINNERS OF AITU CHALLENGE!\n          </Cell>\n        </Cell>\n        <Cell large={12} className=\"thread-info column\" >\n          <Cell large={6} className=\"column\" >\n            <ul>\n              <li>\n                <FontAwesomeIcon icon={faUser} />\n                <Link to='profile/'>ADMIN</Link>\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faCalendarAlt} />\n                <span>17.11.2020</span>\n              </li>\n            </ul>\n          </Cell>\n        </Cell>\n      </Cell>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"react-foundation\";\nimport PostContent from \"./PostContent\";\nimport PostingField from \"./PostingField\";\nimport ThreadPostHeader from \"./ThreadPostHeader\";\nimport PostService from \"../../../Services/PostService\"\nimport { Redirect } from \"react-router-dom\";\nexport default class Forums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts : [],\n      isLoaded: false,\n      error: null,\n      isLogged : true\n    }\n  }\n\n  componentDidMount(){\n    PostService.getPostById(this.props.match.params.postId).then(\n      (res) => {\n        this.setState({\n          isLoaded: true,\n          posts : res.items\n        });\n      },\n      (error) => {\n        this.setState({\n          isLogged: false,\n        });\n      }\n    );\n  }\n  \n  render() {\n    if (!this.state.isLogged) {\n      return <Redirect to=\"/login\" />;\n    }\n    else if(!this.state.isLoaded){\n      return <div>Загрузка...</div>;\n    }\n    return (\n      <div>\n        <Grid className=\"row\">\n          <ThreadPostHeader threadInfo = {this.props.location.topicInfo}/>\n          <PostContent posts={this.state.posts}/>\n          <PostingField topicId={this.props.match.params.postId} />\n        </Grid>\n      </div>\n    );\n  }\n}\n","import \"../../assets/css/style.css\";\r\n\r\nimport React from \"react\";\r\nimport { Grid, Cell } from \"react-foundation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faNewspaper } from \"@fortawesome/free-regular-svg-icons\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class AccountPosts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    var content = [];\r\n    this.props.posts.map((post) => {\r\n      let datetime = new Date(post.writtenDate);\r\n      content.push(\r\n        <Grid\r\n          large={12}\r\n          className=\"forum-topic\"\r\n          key={parseInt(`${post.topicId}${post.id}`)}\r\n        >\r\n          <Cell large={1} className=\"column lpad\">\r\n            <FontAwesomeIcon icon={faNewspaper} />\r\n          </Cell>\r\n          <Cell large={7} small={8} className=\"column lpad\">\r\n            <span className=\"overflow-control\">\r\n              <Link to={`/thread/${post.topicId}`}>\r\n                {post.text.substring(0, 15)}\r\n              </Link>\r\n            </span>\r\n            <span className=\"overflow-control\">\r\n              {\"... \" + post.text.substring(15, 40)}\r\n            </span>\r\n          </Cell>\r\n          <Cell large={4} className=\"column lpad\">\r\n            <span className=\"center\">\r\n              {datetime.getDate() +\r\n                \"/\" +\r\n                datetime.getMonth() +\r\n                \"/\" +\r\n                datetime.getFullYear() +\r\n                \" \" +\r\n                datetime.getHours() +\r\n                \":\" +\r\n                datetime.getMinutes() +\r\n                \":\" +\r\n                datetime.getSeconds()}\r\n            </span>\r\n          </Cell>\r\n        </Grid>\r\n      );\r\n    });\r\n    return content;\r\n  }\r\n}\r\n","import \"../../assets/css/style.css\";\r\n\r\nimport React from \"react\";\r\nimport { Grid, Cell } from \"react-foundation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faNewspaper } from \"@fortawesome/free-regular-svg-icons\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class AccountTopics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    var content = [];\r\n    this.props.topics.map((topic) => {\r\n      let datetime = new Date(topic.updatedDate);\r\n      content.push(\r\n        <Grid\r\n          large={12}\r\n          className=\"forum-topic\"\r\n          key={parseInt(`${topic.id}${topic.creatorId}`)}\r\n        >\r\n          <Cell large={1} className=\"column lpad\">\r\n            <FontAwesomeIcon icon={faNewspaper} />\r\n          </Cell>\r\n          <Cell large={7} small={8} className=\"column lpad\">\r\n            <span className=\"overflow-control\">\r\n              <Link to={`/thread/${topic.id}`}>\r\n                {topic.name}\r\n              </Link>\r\n            </span>\r\n            <span className=\"overflow-control\">\r\n              {topic.description}\r\n            </span>\r\n          </Cell>\r\n          <Cell large={4} className=\"column lpad\">\r\n            <span className=\"center\">\r\n              {datetime.getDate() +\r\n                \"/\" +\r\n                datetime.getMonth() +\r\n                \"/\" +\r\n                datetime.getFullYear() +\r\n                \" \" +\r\n                datetime.getHours() +\r\n                \":\" +\r\n                datetime.getMinutes() +\r\n                \":\" +\r\n                datetime.getSeconds()}\r\n            </span>\r\n          </Cell>\r\n        </Grid>\r\n      );\r\n    });\r\n    return content;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tabs, TabItem, TabsContent, TabPanel } from \"react-foundation\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport AccountPosts from \"./AccountPosts\";\r\nimport AccountTopics from \"./AccountTopics\";\r\n\r\nexport default class AccountTab extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activeIndex: 1,\r\n      posts: [],\r\n      isLoadedPosts: false,\r\n      topics: [],\r\n      isLoadedTopics: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getProfilePosts(this.props.accountId).then((res) => {\r\n      this.setState({\r\n        posts: res,\r\n        isLoadedPosts: true,\r\n      });\r\n    });\r\n    UserService.getProfileTopics(this.props.accountId).then((res) => {\r\n      this.setState({\r\n        topics: res,\r\n        isLoadedTopics: true,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isLoadedPosts || !this.state.isLoadedTopics) {\r\n      return <div>Загрузка...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          type=\"text/css\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.5.1/css/foundation-float.min.css\"\r\n        />\r\n        <Tabs>\r\n          <TabItem\r\n            isActive={this.state.activeIndex === 1}\r\n            onClick={(e) => {\r\n              this.setState({ activeIndex: 1 });\r\n            }}\r\n          >\r\n            <a href={\"#posts\"}>Posts</a>\r\n          </TabItem>\r\n          <TabItem\r\n            isActive={this.state.activeIndex === 2}\r\n            onClick={(e) => {\r\n              this.setState({ activeIndex: 2 });\r\n            }}\r\n          >\r\n            <a href={\"#topics\"}>Topics</a>\r\n          </TabItem>\r\n        </Tabs>\r\n        <TabsContent>\r\n          <TabPanel id={\"tab2\"} isActive={this.state.activeIndex === 1}>\r\n            <AccountPosts posts={this.state.posts.items} />\r\n          </TabPanel>\r\n          <TabPanel id={\"tab2\"} isActive={this.state.activeIndex === 2}>\r\n            <AccountTopics topics={this.state.topics.items} />\r\n          </TabPanel>\r\n        </TabsContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Cell, Row, Column } from \"react-foundation\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AccountTab from \"./AccountTab\";\r\n\r\nexport default class Account extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accInfo: [],\r\n      isLoaded: false,\r\n      error: null,\r\n      isLogged: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getProfile(this.props.match.params.accountId).then(\r\n      (res) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          accInfo: res,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLogged: false,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isLogged) {\r\n      return <Redirect to=\"/login\" />;\r\n    } else if (!this.state.isLoaded) {\r\n      return <div>Загрузка...</div>;\r\n    }\r\n    var createDate = new Date(this.state.accInfo.createOn);\r\n    var lastActivity = new Date(this.state.accInfo.lastTime);\r\n    return (\r\n      <Cell className=\"row panel grid-x account\">\r\n        <Cell large={3} className=\"column profile-left\">\r\n          <Cell large={12} className=\"column prof-element\">\r\n            <img\r\n              src=\"https://avatarfiles.alphacoders.com/495/49573.jpg\"\r\n              alt=\"avatar\"\r\n            />\r\n          </Cell>\r\n          <Cell large={12} className=\"column prof-element\">\r\n            <div className=\"info\">\r\n              <span className=\"column\">\r\n                Reg.date :{\" \"}\r\n                {createDate.getDate() +\r\n                  \"/\" +\r\n                  createDate.getMonth() +\r\n                  \"/\" +\r\n                  createDate.getFullYear()}\r\n              </span>\r\n              <span className=\"column\">\r\n                Roles :{\" \"}\r\n                {this.state.accInfo.roles.map((role) => role.name + \" /\")}\r\n              </span>\r\n              <span className=\"column\">Score : {this.state.accInfo.score}</span>\r\n            </div>\r\n          </Cell>\r\n        </Cell>\r\n        <Cell large={9} className=\"column profile-right\">\r\n          <Cell large={12} className=\"column prof-element\">\r\n            <Cell className=\"column prof-head\">\r\n              <span>{this.state.accInfo.login}</span>\r\n              <span className=\"floatr\">\r\n                {lastActivity.getDate() +\r\n                  \"/\" +\r\n                  lastActivity.getMonth() +\r\n                  \"/\" +\r\n                  lastActivity.getFullYear() +\r\n                  \" \" +\r\n                  lastActivity.getHours() +\r\n                  \":\" +\r\n                  lastActivity.getMinutes()}\r\n              </span>\r\n            </Cell>\r\n            <Cell className=\"column statistic\">\r\n              <a href=\"\" className=\"page-counter\">\r\n                <div className=\"count\">{this.state.accInfo.postCount}</div>\r\n                <div className=\"muted\">posts</div>\r\n              </a>\r\n              <a href=\"\" className=\"page-counter\">\r\n                <div className=\"count\">{this.state.accInfo.topicCount}</div>\r\n                <div className=\"muted\">topics</div>\r\n              </a>\r\n            </Cell>\r\n          </Cell>\r\n          <Cell large={12} className=\"column prof-element\">\r\n            <AccountTab accountId={this.props.match.params.accountId} />\r\n          </Cell>\r\n        </Cell>\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport TopicService from \"../../../Services/TopicService\";\r\nimport autosize from \"autosize\";\r\n\r\nexport default class CreateThread extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.createHandler = this.createHandler.bind(this);\r\n    this.state = {\r\n      name: \"\",\r\n      description: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.input.focus();\r\n    autosize(this.textarea);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n  createHandler(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    TopicService.createSubtopic(\r\n      this.props.match.params.parentTopicId,\r\n      this.state.name,\r\n      this.state.description\r\n    ).then((res) => {\r\n      window.location.href = \"/forum/\" + this.props.match.params.parentTopicId;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"form-container postform-container\">\r\n          <Form\r\n            method=\"post\"\r\n            id=\"createThread\"\r\n            className=\"post-form\"\r\n            onSubmit={this.createHandler}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Thread name\"\r\n              id=\"threadname\"\r\n              name=\"threadname\"\r\n              min=\"5\"\r\n              max=\"128\"\r\n              value={this.state.name}\r\n              onChange={this.onChangeName}\r\n              ref={(c) => (this.input = c)}\r\n            />\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"Thread description\"\r\n              id=\"threaddescription\"\r\n              name=\"threaddescription\"\r\n              min=\"5\"\r\n              max=\"256\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              ref={(c) => (this.textarea = c)}\r\n            />\r\n            <button\r\n              id=\"doPost\"\r\n              type=\"submit\"\r\n              name=\"doPost\"\r\n              disabled={this.state.loading}\r\n            >\r\n              Create thread\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App/assets/css/foundation.min.css\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./App/Components/Header.jsx\";\nimport Breadcrumbs from \"./App/Components/Breadcrumbs.jsx\";\nimport Forums from \"./App/Components/Forums/Forums.jsx\";\nimport LoginPage from \"./App/Components/Login/LoginPage\";\nimport SubForums from \"./App/Components/Forums/SubForums\";\nimport Thread from \"./App/Components/Thread/Thread\";\nimport Account from \"./App/Components/Account/Account\";\nimport CreateThread from \"./App/Components/Thread/CreateThread\";\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Breadcrumbs />\n            <Forums />\n          </Route>\n          <Route\n            exact\n            path=\"/forum/:subTopicId\"\n            render={(props) => (\n              <div>\n                <Header />\n                <Breadcrumbs />\n                <SubForums {...props} />\n              </div>\n            )}\n          />\n          <Route\n            path=\"/thread/:postId\"\n            render={(props) => (\n              <div>\n                <Header />\n                <Breadcrumbs />\n                <Thread {...props} />\n              </div>\n            )}\n          ></Route>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route\n            path=\"/profile/:accountId\"\n            render={(props) => (\n              <div>\n                <Header />\n                <Breadcrumbs />\n                <Account {...props} />\n              </div>\n            )}\n          ></Route>\n          <Route\n            path=\"/forum/create/:parentTopicId\"\n            render={(props) => (\n              <div>\n                <Header />\n                <Breadcrumbs />\n                <CreateThread {...props} />\n              </div>\n            )}\n          ></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}